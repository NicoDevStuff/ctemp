#!/bin/sh

PROJECT="$PROJECT$"

# super fancy build script
has_param() {
    local term="$1"
    shift
    for arg; do
        if [[ $arg == "$term" ]]; then
            return 0
        fi
    done
    return 1
}

debug() {
    premake5 gmake
    echo -e "\033[32m\033[1m=== Compiling in debug mode ===\033[32m\n\033[1m\033[0m"
	make config=debug
    ./build/Debug/$PROJECT
    echo -e "\033[32m\n\033[1m=== Done running in debug mode ===\033[32m\n\033[1m\033[0m"
}

release() {
    premake5 gmake
    echo -e "\033[32m\033[1m=== Compiling in release mode ===\033[32m\n\033[1m\033[0m"
	make config=release
    ./build/Release/$PROJECT
    echo -e "\n\033[32m\033[1m=== Done running in release mode ===\033[32m\n\033[1m\033[0m"
}

debugger() {
    premake5 gmake
    echo -e "\033[32m\033[1m=== Compiling in debug mode ===\033[32m\n\033[1m\033[0m"
	make config=debug
    valgrind --leak-check=full build/Debug/$PROJECT
    echo -e "\n\033[32m\033[1m=== Done running in debug mode ===\033[32m\n\033[1m\033[0m"
}

if has_param '-d' "$@"; then
    debug
elif has_param '-r' "$@"; then
    release
elif has_param '-debugger' "$@"; then
    debugger
elif has_param '-h' "$@"; then
    echo -e "\n \033[32m\033[1m=== HELP ===\033[32m\n\033[1m\033[0m\n-d for debug\n-r for release\n-h for help"
elif has_param '-i' "$@"; then
    choice=""
    read -p "Enter mode(d for debug, r for release): " choice
    if [ $choice = 'd' ]; then
        make config=debug
        sudo cp build/Debug/$PROJECT /usr/local/bin/$PROJECT
    elif [ $choice = 'r' ]; then
        make config=release
        sudo cp build/Release/$PROJECT /usr/local/bin/$PROJECT
    fi
else
    echo -e "\033[31m\n\033[1m=== ERROR! Select either Run or Release mode; -h for help ===\n\033[0m\033[1m\033[0m"
fi
